{
	"info": {
		"_postman_id": "2560a8de-de8b-4410-8bc1-cdc72b997f31",
		"name": "Trooper Users-Jobs API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18119812"
	},
	"item": [
		{
			"name": "getAllGamers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/gamers",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"gamers"
					]
				}
			},
			"response": []
		},
		{
			"name": "createGamer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Gamer created message returned\", function () {\r",
							"    pm.response.to.have.jsonBody(\"message\", \"gamer created!\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"Test\",\r\n    \"profile_type\": \"Gamer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/gamers",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"gamers"
					]
				}
			},
			"response": []
		},
		{
			"name": "getGamerId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"length is 1\", function () {\r",
							"    pm.response.to.have.jsonBody(\"length\", 1);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"if(jsonData.data.length>0)\r",
							"    pm.environment.set(\"gamer_id\", jsonData.data[0].id);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\":\"test\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/gamer/id",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"gamer",
						"id"
					]
				}
			},
			"response": []
		},
		{
			"name": "getGamer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"length is 1\", function () {\r",
							"    pm.response.to.have.jsonBody(\"length\", 1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/gamers/{{gamer_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"gamers",
						"{{gamer_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateGamer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response should have success status\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.status).to.eql(\"success\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"newusername\",\r\n  \"profile_type\":\"Recruiter\",\r\n  \"birthdate\": \"2022-10-10\",\r\n  \"description\": \"new gamer description\",\r\n  \"location\": \"new gamer location\",\r\n  \"name_discord\": \"newgamerdiscord\",\r\n  \"link_twitter\": \"https://twitter.com/newgamer\",\r\n  \"link_linkedin\": \"https://linkedin.com/newgamer\",\r\n  \"link_facebook\": \"https://facebook.com/newgamer\",\r\n  \"min_hour_rate\": \"5.5\",\r\n  \"hours_per_day\": \"4.5\",\r\n  \"total_earned\": \"3000\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/gamers/{{gamer_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"gamers",
						"{{gamer_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "getGamer after update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have success status\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.status).to.eql(\"success\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 1 gamer\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.eql(1);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have the correct username\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data[0].username).to.eql(\"newusername\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have the correct profile_type\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data[0].profile_type).to.eql(\"Recruiter\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/gamers/{{gamer_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"gamers",
						"{{gamer_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteGamer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/gamers/{{gamer_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"gamers",
						"{{gamer_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "getGamer after delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"length is 0\", function () {\r",
							"    pm.response.to.have.jsonBody(\"length\", 0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/gamers/{{gamer_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"gamers",
						"{{gamer_id}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "gamer_id",
			"value": "",
			"type": "string"
		}
	]
}